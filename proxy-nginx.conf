events {}

http {

    # enforces redirect of http to https
    server {
        listen 80;
        server_name localhost; # Replace with your domain name
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl; # Enable SSL
        server_name localhost;
        ssl_certificate /etc/nginx/ssl/server.crt; # Path to your SSL certificate
        ssl_certificate_key /etc/nginx/ssl/server.key; # Path to your SSL key
        add_header Strict-Transport-Security max-age=2592000;

        location /webapp/ {

            auth_request /oauth2/auth;
            error_page 401 = /oauth2/sign_in;

            # pass information via X-User and X-Email headers to backend,
            # requires running with --set-xauthrequest flag
            auth_request_set $user   $upstream_http_x_auth_request_user;
            auth_request_set $email  $upstream_http_x_auth_request_email;
            proxy_set_header X-User  $user;
            proxy_set_header X-Email $email;

            # if you enabled --pass-access-token, this will pass the token to the backend
            auth_request_set $token  $upstream_http_x_auth_request_access_token;
            proxy_set_header X-Access-Token $token;

            # if you enabled --cookie-refresh, this is needed for it to work with auth_request
            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;
   
            rewrite ^/webapp(.*)$ $1 break;
 
            proxy_pass "http://webapp:80";
            # other necessary proxy settings...
        
        }

        location /oauth2/ {
            proxy_pass       http://oauth2-proxy:4180;
            proxy_set_header Host                    $host;
            proxy_set_header X-Real-IP               $remote_addr;
            proxy_set_header X-Scheme                $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
            # or, if you are handling multiple domains:
            # proxy_set_header X-Auth-Request-Redirect $scheme://$host$request_uri;
        }

        location = /oauth2/auth {
            proxy_pass       http://oauth2-proxy:4180;
            proxy_set_header Host             $host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Scheme         $scheme;
            # nginx auth_request includes headers but not body
            proxy_set_header Content-Length   "";
            proxy_pass_request_body           off;
        }



        location / {
            # default web app
            return 301 https://$host/webapp/;
        }

   
    }
}
