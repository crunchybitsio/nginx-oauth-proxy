events {}

http {

    # enforces redirect of http to https
    server {
        listen 80;
        server_name localhost; # Replace with your domain name
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl; # Enable SSL
        server_name localhost;
        ssl_certificate /etc/nginx/ssl/server.crt; # Path to your SSL certificate
        ssl_certificate_key /etc/nginx/ssl/server.key; # Path to your SSL key
        add_header Strict-Transport-Security max-age=2592000;



        location /webapp/ {
            auth_request /oauth2/auth;
            error_page 401 = /oauth2/sign_in;

            proxy_http_version 1.1;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
            proxy_connect_timeout 1;
            proxy_send_timeout 30;
            proxy_read_timeout 30;

            rewrite ^/webapp(.*)$ $1 break;
 
            proxy_pass "http://webapp:80";
            # other necessary proxy settings...

        
        }

        location /oauth2/ {
            index sign_in
            proxy_http_version 1.1;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
            proxy_connect_timeout 1;
            proxy_send_timeout 30;
            proxy_read_timeout 30;

            proxy_pass http://oauth2-proxy:4180;

        }
        
        # authenticate, if hit root, redirect to default application
        location / {
            auth_request /oauth2/auth;
            error_page 401 = /oauth2/sign_in;

            # default web app
            return 301 https://$host/webapp/;
        }

   
    }
}
